# .github/workflows/ci.yml

# 워크플로우의 이름
name: Develop Branch CI

# 어떤 이벤트에서 이 워크플로우를 실행할지 정의
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

# 실행될 작업(job)들을 정의
jobs:
  build-and-test:
    # 작업이 실행될 환경
    runs-on: ubuntu-latest

    # 작업 단계(step)들을 정의
    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 3. Corepack을 사용해 특정 버전의 Yarn을 명시적으로 준비 및 활성화
      - name: Prepare and activate Yarn
        run: corepack prepare yarn@4.9.2 --activate

      # 4. Yarn 캐시 디렉토리 경로 가져오기
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        working-directory: ./omechu-app

      # 5. 의존성 캐시 설정
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-v4-${{ hashFiles('./omechu-app/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v4-

      # 6. 의존성 설치
      - name: Install dependencies
        run: yarn install --immutable
        working-directory: ./omechu-app

      # 7. 코드 포맷팅 확인
      - name: Check formatting with Prettier
        run: yarn format:check
        working-directory: ./omechu-app

      # 8. 코드 린팅 실행
      - name: Run ESLint
        run: yarn lint
        working-directory: ./omechu-app

      # 9. 빌드 실행
      - name: Build project
        run: yarn build
        working-directory: ./omechu-app
